version: '3.1'

services:
  postgres:
    image: "postgres:11-alpine"
    environment:
      POSTGRES_PASSWORD: "test"
      POSTGRES_USER: "test"
      POSTGRES_DB: "test"
    ports:
    - "5433:5432"

  redis:
    image: redis
    ports:
    - "6379:6379"

  kafka:
    image: "spotify/kafka"
    ports:
    - "2181:2181"
    - "9092:9092"
    environment:
      ADVERTISED_HOST: "localhost"
      ADVERTISED_PORT: "9092"

  mongo:
    image: mongo
    ports:
    - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "test"
      MONGO_INITDB_ROOT_PASSWORD: "test"

  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
    - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Test1234"

  mysql:
    image: mysql
    ports:
    - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "test"
      MYSQL_DATABASE: "test"

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
      environment:
        path.repo: "/tmp"
        repositories.url.allowed_urls: "http://*"
        bootstrap.memory_lock: "false"
        node.name: "test"
        cluster.initial_master_nodes: "test"
        discovery.zen.ping.unicast.hosts: "elasticsearch"
        http.max_content_length: "5mb"
      ports:
          - "9200:9200"
  minio:
    image: minio/minio
    volumes:
      - data:/data
    ports:
      - "9001:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data

  rabbit:
    image: rabbitmq:3.7.18-management
    hostname: catcher-rabbit
    ports:
        - 5672:5672
        - 5671:5671
        - 15672:15672
        - 15671:15671
    volumes:
        - ./test/rabbit-config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
        - ./test/rabbit-config/ca_certificate.pem:/etc/rabbitmq/certs/ca_certificate.pem
        - ./test/rabbit-config/server_certificate.pem:/etc/rabbitmq/certs/server_certificate.pem
        - ./test/rabbit-config/server_key.pem:/etc/rabbitmq/certs/server_key.pem

  webserver:
    image: puckel/docker-airflow:1.10.4
    restart: always
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - FERNET_KEY=zp8kV516l9tKzqq9pJ2Y6cXbM3bgEWIapGwzQs6jio4=
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]" ]
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  data: